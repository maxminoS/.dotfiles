#+TITLE:Dotfiles

The dotfiles that compile just about everything I need in a machine.

* Table of Contents
:PROPERTIES:
:TOC:      :include all
:END:
:CONTENTS:
:END:
- [[#setting-up][Setting up]]
  - [[#base-directories][Base Directories]]
  - [[#private-files][Private Files]]
  - [[#package-manager][Package Manager]]
  - [[#base-setup][Base Setup]]
    - [[#linux][Linux]]
    - [[#macos][macOS]]
  - [[#emacs][Emacs]]
    - [[#magit][Magit]]
    - [[#vterm][VTerm]]
    - [[#mu4e][mu4e]]
    - [[#spotifyd][spotifyd]]
    - [[#lsp-mode][LSP Mode]]
    - [[#pdf-tools][PDF Tools]]
- [[#manual][Manual]]
  - [[#stow][Stow]]
  - [[#gpg][GPG]]
  - [[#images][Images]]
  - [[#macos-keybindings][macOS Keybindings]]
  - [[#terminal][Terminal]]
  - [[#mtmr][MTMR]]
- [[#installations][Installations]]
  - [[#command-line-applications][Command Line Applications]]
  - [[#desktop-applications][Desktop Applications]]


* Setting up
** Base Directories
Make sure these directories exist in the home folder:
- .bin/ (custom scripts)
- Bookshelf/ (books, articles)
- Development/ (programming)
- Documents/
- Downloads/
- Dropbox/
- Pictures/
- Transmission/ (torrents)
- Videos/

** Private Files
- GPG Public & Secret Keys (gpg)
- =mbsyncrc= (mail)
- =~/.emacs.d/lisp/.authinfo.gpg= (magit, mu4e)
- =.secrets.el= (spotifyd)
- =spotifyd.conf= (spotifyd)

** Package Manager
- *Arch*: pacman
- *AUR*: yay
#+BEGIN_SRC sh
sudo pacman -S base-devel
git clone https://aur.archlinux.org/yay-git.git
cd yay-git
makepkg -si
#+END_SRC

- *Debian*: apt
- *macOS*: brew
#+BEGIN_SRC sh
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
eval "$(/opt/homebrew/bin/brew shellenv)"
#+END_SRC

** Base Setup
*** Linux
1. Install =emacs=, =git=, =gpg=, =pass=, =stow=, =zsh=
2. =git clone https://github.com/maxminoS/.dotfiles=
3. Stow, at the least, the following packages: =git=, =zsh=, =bash=
4. Restart for environment variables to take effect
5. =git clone https://github.com/maxminoS/.emacs.d=
6. Install Dropbox (org-mode)
7. Import GPG Keys =gpg --import <key_file>=
8. =cd ~/.local/share/= then clone =.password-store/=

*** macOS
1. Install =git=
2. =git clone https://github.com/maxminoS/.dotfiles=
3. =sh brew.sh= then =sh .macos=
4. Stow required packages, at least =git= and =zsh=
5. Restart for environment variables to take effect
6. =git clone https://github.com/maxminoS/.emacs.d=
7. Add Emacs to have full file access (dired)
8. Import GPG Keys =gpg --import <key_file>=
9. =cd ~/.local/share/= then clone =.password-store/=

** Emacs
*** Before Opening
**** Magit
1. Set the appropriate usernames:
#+BEGIN_SRC sh
git config --global user.name "maxminoS"
git config --global user.email "email@address.com"
#+END_SRC

2. Create Personal Access Tokens and store them as =~/.emacs.d/lisp/.authinfo.gpg=
#+BEGIN_SRC conf
# -*- epa-file-encrypt-to: ("gpg@email.com") -*-
machine api.github.com login <username>^forge password <token>
machine gitlab.com/api/v4 login <username>^forge password <token>
#+END_SRC

**** VTerm
Install: =cmake=, =libtool-bin=, =libvterm[-dev]=

**** mu4e
1. Install =mu= (including =mu4e=) and =isync=
2. Add email authentication to =~/.emacs.d/lisp/.authinfo.gpg=
#+BEGIN_SRC conf
# -*- epa-file-encrypt-to: ("gpg@email.com") -*-
...
machine smtp.gmail.com login <email@address.com> password <password> port 465
#+END_SRC

3. Create appropriate =~/.config/isync/mbsyncrc=
#+BEGIN_SRC conf
# Account: email1@address.com
# Full Name: Your F. Name
# SMTP smtp.gmail.com
IMAPAccount <username1>-gmail
Host imap.gmail.com
User email1@address.com
PassCmd "pass Mail/email1\@address.com"
SSLType IMAPS
# Linux
CertificateFile /etc/ssl/certs/ca-certificates.crt
# macOS
CertificateFile /usr/local/etc/openssl/cert.pem
AuthMechs PLAIN

# Remote
IMAPStore <username1>-gmail-remote
Account <username1>-gmail

# Local
MaildirStore <username1>-gmail-local
Subfolders Verbatim
Path ~/.config/mail/email1@address.com/
Inbox ~/.config/mail/email1@address.com/Inbox

# Channels
Channel <username1>-gmail-inbox
Far :<username1>-gmail-remote:
Near :<username1>-gmail-local:
Patterns "Inbox"
Create Both
SyncState *

Channel <username1>-gmail-sent
Far :<username1>-gmail-remote:"[Gmail]/Sent Mail"
Near :<username1>-gmail-local:"Sent"
Create Both
SyncState *

Channel <username1>-gmail-trash
Far :<username1>-gmail-remote:"[Gmail]/Trash"
Near :<username1>-gmail-local:"Trash"
Create Both
SyncState *

Channel <username1>-gmail-all
Far :<username1>-gmail-remote:"[Gmail]/All Mail"
Near :<username1>-gmail-local:"All"
Create Both
SyncState *

Channel <username1>-gmail-starred
Far :<username1>-gmail-remote:"[Gmail]/Starred"
Near :<username1>-gmail-local:"Starred"
Create Both
SyncState *

# Group
Group <username1>-gmail
Channel <username1>-gmail-inbox
Channel <username1>-gmail-sent
Channel <username1>-gmail-trash
Channel <username1>-gmail-all
Channel <username1>-gmail-starred


# Account: email2@address.com
...
#+END_SRC

4. Make the appropriate email directories in =~/.config/mail=
5. =mbsync -a=
6. Initialize =mu=
#+BEGIN_SRC
mu init --maildir=~/.config/mail \
    --my-address=EMAIL_ADDRESS_1 \
    --my-address=EMAIL_ADDRESS_2

mu index
#+END_SRC

**** spotifyd
1. Install =spotifyd=
2. Set spotifyd configuration in =~/.config/spotifyd/spotifyd.conf=
#+BEGIN_SRC conf
[global]
username = ""
password = ""
backend = "" # Check =spotifyd -h= to search available backends
device_name = ""
device_type = "computer"
bitrate = 320
#+END_SRC

3. Set spotify client ID and secret in =~/.emacs.d/lisp/.secret.el=
#+BEGIN_SRC emacs-lisp
(setq emax/spotify-client-id "<client-id>")
(setq emax/spotify-client-secret "<client-secret>")
#+END_SRC

4. Make launch at startup

*** Within Emacs
- =M-x all-the-icons-install-fonts=
- Install =unzip= (nov.el)
**** LSP Mode
**** PDF Tools
- Linux: =gcc=, =g++=, =automake=, =autoconf=, =libpng-dev=, =zlib1g-dev=, =libpoppler-glib-dev=, =libpoppler-private-dev=, =imagemagick=
- macOS: =brew install poppler automake= and =export PKG_CONFIG_PATH=/usr/local/Cellar/zlib/1.2.8/lib/pkgconfig:/usr/local/lib/pkgconfig:/opt/X11/lib/pkgconfig=

** Yabai
Yabai is a tiling window manager for macOS. Paired with skhd, window management can be handled using only the keyboard.

You may need to disable the *System Integrity Protection* for Yabai (in *Recovery Mode*)
#+BEGIN_SRC sh
csrutil disable --with kext --with dtrace --with nvram --with basesystem
brew install koekeishiya/formulae/yabai
sudo yabai --install-sa

brew services start yabai
#+END_SRC

*** skhd
#+BEGIN_SRC sh
brew install koekeishiya/formulae/skhd
brew services start skhd
#+END_SRC

** Spacebar
Spacebar is a minimal menubar for the macOS

Autohide the menubar to use
#+BEGIN_SRC sh
brew install cmacrae/formulae/spacebar
brew services start spacebar
#+END_SRC


* Manual
** Stow
- =stow <packages>= dotfiles directory to stow listed packages
- Each package must be in the appropriate directory structure
- =stow -D <packages>= to unlink packages

** GPG
- List keys: =gpg -k=
- Export keys:
  =gpg -o public-key.gpg --export --armor --key email@address.com=
  =gpg -o secret-key.gpg --export-secret-key --armor email@address.com=
- Import keys: =gpg --import <key_file>=

** Images
#+BEGIN_SRC sh
stow images (links it to ~/Pictures/images)
# For EXWM
sudo mkdir /usr/share/backgrounds
sudo ln -sF ~/Pictures/images /usr/share/backgrounds
#+END_SRC

** macOS Keybindings
*** Modifier Keys
/Control, Meta, and super keys are only Emacs notations/
- =C= - Control /(bound to fn)/
- =M= - Option
- =s= - Command
- =CapsLock= - Esc

*** Trackpad
- =Three Finger Swipe Up= - Mission Control
- =Three Finger Swipe Down= = Current Application Windows
- =Three Finger Swipe Left/Right= - Switch workspaces
- =Two Finger Swipe Left from Right Fringe= - Notification Center

*** Keybinds
- =Option-<1-9>= - Switch to workspace <1-9>
- =Option-Shift-Return= - Screenread selection
- =Control-Space= - Switch input source
- =Command-Space= - Search Spotlight

*** Keyboard Navigation
- =Control-F2= - Focus menu bar
- =Control-F3= - Focus dock
- =Control-F4= - Move to next window
- =Control-F8= - Focus status menu

*** Screenshots
(=Command-Shift-x= to clipboard)
- =3= - Entire screen
- =4= - Selected area
- =5= - Change screenshot/recording options
- =6= - Touch bar
/Add Control to save screenshots as a file/

*** Yabai
- =Option-Shift-<1-9>= - Move window to Space
- =Option-<h/j/k/l>= - Focus left/down/up/right window
- =Option-<Left/Down/Up/Right>= - Swap window

- =Option/Control-Shift-<Left/Down/Up/Right>= - Increase/Decrease window size
- =Option-== - Balance window size

- =Option-F= - Toggle fullscreen
- =Option-P= - Pop in/out

- =Control-F12= - Open URL in clipboard in *mpv*

** Terminal
In macOS, its Terminal emulator may be enough without Alacritty.

Preferences > Profiles > Import > macos/*.terminal

** MTMR
/My Touchbar, My Rules../
Only for Macs with a touchbar

#+BEGIN_HTML
<img src="static/touchbar-with-mtmr.png" alt="Touch Bar With MTMR">
#+END_HTML

Installation:
- =brew install --cask mtmr=
- Allow application to have Privacy > Accessibility access
- macos/mtmr-items.json -> ~/Library/Application Support/MTMR/items.json

Displays:
- Exit to built-in touchbar
- Dock (only Finder, Emacs, Google Chrome, Terminal, Discord)
- Spotify current song
- Do not disturb button
- Network connection
- Battery status
- Time

Features:
- Single tap Spotify to pause/play
- Double tap Spotify to play next song
- Triple tap Spotify to play previous song
- Two finger swipe to adjust volume
- Three finger swipe to adjust brightness


* Installations
** Command Line Applications
| *App*         | *Arch*               | *macOS*        |
|               | *pacman -S*          | *brew install* |
| *git*         | git                  | git            |
| *gpg*         | gnupg                | gnupg          |
| *stow*        | stow                 | stow           |
| *zsh*         | zsh                  | *Installed*    |
| *pass*        | pass                 | pass           |
| *unzip*       | unzip                | *Installed*    |
| *vim*         | vim                  | *Installed*    |
| *ffmpeg*      | ffmpeg               | ffmpeg         |
| *htop*        | htop                 | htop           |
| *neofetch*    | neofetch             | neofetch       |
| *wget*        | wget                 | wget           |
| *curl*        | curl                 | *Installed*    |
| *python*      | python               | python         |
| *node*        | nodejs               | node           |
| *npm*         | npm                  | node           |
| *yarn*        | yarn                 | yarn           |
| *typescript*  | *npm i -g*           | typescript     |
| *go*          | go                   | go             |
| *picom*       | picom                | *Not macOS*    |
| *cmake*       | cmake                | cmake          |
| *libtool*     | libtool              | libtool        |
| *libvterm*    | libvterm             | libvterm       |
| *mu*          | *yay* mu             | mu             |
| *isync*       | isync                | isync          |
| *spotifyd*    | spotifyd             | spotifyd       |
| *youtube-dl*  | youtube-dl           | youtube-dl     |
| *windscribe*  | *yay* windscribe-cli | windscribe     |
| *gcc*         | gcc                  | gcc            |
| *automake*    | automake             | automake       |
| *autoconf*    | autoconf             | autoconf       |
| *libpng*      | libpng               | libpng         |
| *zlib*        | zlib                 | zlib           |
| *imagemagick* | imagemagick          | imagemagick    |
| *poppler*     | poppler              | poppler        |
| *coreutils*   | *Installed*          | coreutils      |
| *moreutils*   | *Installed*          | moreutils      |
| *findutils*   | *Installed*          | findutils      |
| *gnu-sed*     | *Installed*          | gnu-sed        |
| *grep*        | *Installed*          | grep           |
| *openssh*     | *Installed*          | openssh        |
| *ssh-copy-id* | *Installed*          | ssh-copy-id    |

** Desktop Applications
#+BEGIN_SRC sh
brew tap d12frosted/emacs-plus
brew install emacs-plus --with-ctags --with-dbus --with-mailutils --with-no-titlebar --with-xwidgets
#+END_SRC


| *App*         | *Arch*              | *macOS*               |
|               | *pacman -S*         | *brew install --cask* |
| *chrome*      | *yay* google-chrome | google-chrome         |
| *firefox*     | firefox             | firefox               |
| *tor*         | torbrowser-launcher | tor-browser           |
| *pcmanfm*     | pcmanfm-gtk3        | *Not macOS*           |
| *alacritty*   | alacritty           | alacritty             |
| *xterm*       | xterm               | *Not macOS*           |
| *spotify*     | *yay* spotify       | spotify               |
| *dropbox*     | *yay* dropbox       | dropbox               |
| *discord*     | discord             | discord               |
| *feh*         | feh                 | *Not macOS*           |
| *mpv*         | mpv                 | mpv                   |
| *vlc*         | vlc                 | vlc                   |
| *gimp*        | gimp                | gimp                  |
| *inkscape*    | inkscape            | inkscape              |
| *qbittorrent* | qbittorrent         | qbittorrent           |
| *zoom*        | *Not Linux*         | zoom                  |
| *warp*        | *Not Linux*         | cloudflare-warp       |
